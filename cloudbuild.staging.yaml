# Conea ステージング環境用 Google Cloud Build設定

steps:
  # フロントエンドビルド
  - name: 'node:18-alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        cd frontend-v2
        npm ci
        npm run build
        echo "フロントエンドビルド完了"
    dir: '.'

  # バックエンドコンテナイメージのビルド
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/conea-backend-staging:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/conea-backend-staging:latest'
      - '-f'
      - 'backend/Dockerfile'
      - './backend'
    dir: '.'

  # コンテナイメージをContainer Registryにプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'gcr.io/$PROJECT_ID/conea-backend-staging:$BUILD_ID'

  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push' 
      - 'gcr.io/$PROJECT_ID/conea-backend-staging:latest'

  # バックエンドをCloud Runにデプロイ
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'conea-backend-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/conea-backend-staging:$BUILD_ID'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '${_MEMORY}'
      - '--cpu'
      - '${_CPU}'
      - '--max-instances'
      - '${_MAX_INSTANCES}'
      - '--min-instances'
      - '${_MIN_INSTANCES}'
      - '--port'
      - '8000'
      - '--set-env-vars'
      - 'NODE_ENV=staging,PORT=8000,API_HOST=0.0.0.0'
      - '--service-account'
      - '${_SERVICE_ACCOUNT}'

  # フロントエンドをFirebaseにデプロイ
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        npm install -g firebase-tools
        cd frontend-v2
        mkdir -p out
        cp -r dist/* out/ || cp -r build/* out/ || echo "ビルドファイルをコピー"
        firebase use staging-conea-ai --token=$${FIREBASE_TOKEN}
        firebase deploy --only hosting:staging-conea-ai --token=$${FIREBASE_TOKEN}
    secretEnv: ['FIREBASE_TOKEN']

  # デプロイ後のヘルスチェック
  - name: 'gcr.io/cloud-builders/curl'
    args:
      - '-f'
      - 'https://staging.conea.ai/health'

# ビルドオプション
options:
  machineType: 'E2_HIGHCPU_8'
  timeout: '1800s'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# 秘密情報の設定
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/firebase-token/versions/latest
    env: 'FIREBASE_TOKEN'

# アーティファクトの保存
artifacts:
  images:
    - 'gcr.io/$PROJECT_ID/conea-backend-staging:$BUILD_ID'
    - 'gcr.io/$PROJECT_ID/conea-backend-staging:latest'

# 置換変数
substitutions:
  _REGION: 'asia-northeast1'
  _SERVICE_NAME: 'conea-backend-staging'
  _MEMORY: '2Gi'
  _CPU: '2'
  _MAX_INSTANCES: '5'
  _MIN_INSTANCES: '1'
  _SERVICE_ACCOUNT: 'conea-staging@${PROJECT_ID}.iam.gserviceaccount.com'

# ビルドタグ
tags:
  - 'conea-staging'
  - 'backend-staging'
  - 'frontend-staging'