name: Deploy to Staging

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint
      
      - name: Test frontend
        working-directory: ./frontend
        run: npm test
      
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
        env:
          REACT_APP_API_URL: https://staging.conea.example.com/api
          REACT_APP_WS_URL: wss://staging.conea.example.com/ws
          REACT_APP_VERSION: staging-${{ github.sha }}
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Lint backend
        working-directory: ./backend
        run: npm run lint
      
      - name: Test backend
        working-directory: ./backend
        run: npm test
      
      - name: Build backend
        working-directory: ./backend
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./deployment/staging/frontend.Dockerfile
          push: true
          tags: conea/frontend:staging-${{ github.sha }},conea/frontend:staging
          build-args: |
            REACT_APP_API_URL=https://staging.conea.example.com/api
            REACT_APP_WS_URL=wss://staging.conea.example.com/ws
            REACT_APP_VERSION=staging-${{ github.sha }}
      
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./deployment/staging/backend.Dockerfile
          push: true
          tags: conea/backend:staging-${{ github.sha }},conea/backend:staging
      
      - name: Deploy to staging server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_SSH_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /opt/conea-staging
            git pull
            cp .env deployment/staging/.env
            cd deployment/staging
            docker-compose pull
            docker-compose down
            docker-compose up -d
      
      - name: Run smoke tests
        run: |
          echo "Running smoke tests against staging environment..."
          sleep 30  # 起動を待つ
          curl -f https://staging.conea.example.com/health || exit 1
          curl -f https://staging.conea.example.com/api/health || exit 1
      
      - name: Notify on success
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": ":white_check_mark: Successfully deployed to staging: ${{ github.repository }}@${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": ":x: Failed to deploy to staging: ${{ github.repository }}@${{ github.sha }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}