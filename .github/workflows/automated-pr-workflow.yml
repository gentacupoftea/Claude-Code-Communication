name: Automated PR Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # === Job 1: 伝令役 ===
  commenter:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: 'Comment @claude to trigger review logic'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GENTA_PAT }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @claude review requested.

  # === Job 2: AIレビューの門番 ===
  ai_review_gatekeeper:
    runs-on: ubuntu-latest
    needs: [commenter] # Job 1の完了を待つ
    permissions:
      contents: read          # コードのチェックアウトに必要
      pull-requests: write    # PRへのコメント書き込みに必要
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0 
      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: 'Run Claude Review Action'
        uses: zbeekman/claude-pr-review-action@v1
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROMPT_FILE_PATH: 'docs/prompts/project_guidelines/comprehensive_development_guidelines.md'
      # このステップは、Actionが非同期でコメントするため、実際には後続のGatekeeper Checkで判定する
      
      - name: 'Wait and Check AI Review Result (Gatekeeper)'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          BOT_NAME: ${{ vars.AI_BOT_NAME || 'claude-bot' }}
          REJECT_KEYWORDS: ${{ vars.AI_REJECT_KEYWORDS || '推奨しません|修正が必要です|改善提案|not recommended|needs fix|improvement needed' }}
        run: |
          set -euo pipefail
          echo "Waiting for review comment from bot: $BOT_NAME"
          # AIのコメント投稿を待機するリトライロジック
          for i in {1..6}; do
            LATEST_COMMENT_AUTHOR=$(gh pr view $PR_NUMBER --json comments --jq '.comments[-1].author.login // ""')
            if [ "$LATEST_COMMENT_AUTHOR" == "$BOT_NAME" ]; then
              echo "✅ Review comment found."
              break
            fi
            if [ $i -eq 6 ]; then
              echo "❌ Timed out waiting for review comment."
              exit 1
            fi
            echo "Waiting for review comment... Attempt ($i/6)"
            sleep 10
          done
          
          # コメント内容を判定
          COMMENT_BODY=$(gh pr view $PR_NUMBER --json comments --jq --arg BOT_NAME "$BOT_NAME" '.comments[] | select(.author.login == $BOT_NAME) | .body' | tail -n 1)
          if echo "$COMMENT_BODY" | grep -q -E "$REJECT_KEYWORDS"; then
            echo "❌ AI review requested changes."
            exit 1
          else
            echo "✅ AI review approved."
            exit 0
          fi

  # === Job 3 & 4 (並列実行) ===
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20.x', cache: npm }
      - run: npm ci
      - run: npm run build
      - run: npm run start &
      - run: npx cypress verify
      - run: npx cypress run --config baseUrl=http://localhost:3000

  frontend-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20.x', cache: npm }
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm run test -- --watchAll=false

  # === Job 5: 最終的な門番 ===
  automerge:
    runs-on: ubuntu-latest
    needs: [ai_review_gatekeeper, e2e-tests, frontend-validation]
    if: success()
    steps:
      - name: 'Enable auto-merge for PR'
        uses: peter-evans/enable-auto-merge-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: merge