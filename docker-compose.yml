version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: shopify_mcp_db
    environment:
      POSTGRES_USER: ${DB_USER:-shopify_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-shopify_pass}
      POSTGRES_DB: ${DB_NAME:-shopify_mcp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-shopify_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: shopify_mcp_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shopify_mcp_backend
    environment:
      DATABASE_URL: postgresql://${DB_USER:-shopify_user}:${DB_PASSWORD:-shopify_pass}@postgres:5432/${DB_NAME:-shopify_mcp}
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
      "

  nginx:
    image: nginx:alpine
    container_name: shopify_mcp_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend

volumes:
  postgres_data:

networks:
  default:
    name: shopify_mcp_network