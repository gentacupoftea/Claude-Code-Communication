# Phase 4: AI Analytics Service Dockerfile
FROM node:18-alpine AS builder

# Install Python for TensorFlow.js node bindings
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && \
    npm install -g typescript

# Copy source code
COPY src/ ./src/

# Build TypeScript
RUN tsc

# Production stage
FROM node:18-alpine

# Install Python for TensorFlow.js runtime
RUN apk add --no-cache python3

WORKDIR /app

# Copy dependencies and built code
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package*.json ./

# Create directories for models and cache
RUN mkdir -p /app/models /app/cache

# Set environment
ENV NODE_ENV=production
ENV TF_CPP_MIN_LOG_LEVEL=2

# Expose port
EXPOSE 3003

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3003/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"

# Start the AI analytics service
CMD ["node", "dist/src/ai/server.js"]