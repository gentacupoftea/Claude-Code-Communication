# Task ID: 47
# Title: ローカルLLM選定と役割定義：multiLLM_systemへの統合計画
# Status: pending
# Dependencies: 45, 46
# Priority: high
# Description: 提供された性能・コスト情報を基に、multiLLM_systemに統合するローカルLLMの選定と役割定義を行い、M2 MacとMac Studio環境それぞれに最適なモデル配置とクラウドAIとの連携戦略を設計する。
# Details:
このタスクでは、multiLLM_systemにおけるローカルLLMの効果的な活用戦略を具体化します。

1. **ローカルLLMの選定基準の確立**
   - 性能指標の定義：推論速度、メモリ使用量、トークン処理能力、精度
   - コスト指標の定義：計算リソース要件、ライセンス条件、運用コスト
   - 互換性要件：llama.cpp、GGUF、ONNX等のフォーマット対応
   - 特化機能評価：コード生成、多言語対応、長文脈処理能力など

2. **M2 Mac環境向けモデル選定と設定**
   - 8-10Bパラメータクラスの軽量モデル評価（Phi-3, Mistral, Llama3等）
   - 量子化レベル（4-bit, 5-bit等）の最適化実験
   - メモリ使用量とレイテンシのトレードオフ分析
   - 具体的なモデル候補と設定パラメータの文書化

3. **Mac Studio環境向けモデル選定と設定**
   - 高性能モデル（13B-70Bクラス）の評価
   - マルチGPUデプロイメント設定の最適化
   - バッチ処理とスループット最大化の設定
   - 具体的なモデル候補と設定パラメータの文書化

4. **Worker役割定義と割り当て計画**
   - 各Workerの責任領域の明確化（コード生成、文書要約、データ分析等）
   - Workerごとの最適モデル割り当て
   - 負荷分散とフェイルオーバー戦略
   - スケーリング方針の策定

5. **クラウドAI・ローカルLLM動的切替戦略**
   - 切替判断基準の定義（タスク複雑性、レイテンシ要件、コスト制約等）
   - フォールバックメカニズムの設計
   - ユーザー設定可能な優先度コントロール
   - APIの統一インターフェース設計

6. **統合アーキテクチャ設計**
   - モデルローディング戦略（事前ロード vs オンデマンド）
   - キャッシュ戦略とメモリ管理
   - 並列処理とリソース割り当て
   - モニタリングと自動最適化の仕組み

7. **実装ロードマップの作成**
   - Phase 1（M2 Mac対応）の実装ステップ
   - Phase 2（Mac Studio対応）への移行計画
   - 段階的デプロイと検証のマイルストーン

# Test Strategy:
1. **モデル選定評価テスト**
   - 候補モデルごとに標準ベンチマークを実行（推論速度、メモリ使用量、精度）
   - 実際のM2 Mac環境での起動時間、推論レイテンシ、最大コンテキスト長を測定
   - Mac Studio環境でのスケーラビリティテスト（複数モデル同時実行時のパフォーマンス）
   - 各モデルの特化タスク（コード生成、要約等）の品質評価

2. **Worker割り当てテスト**
   - 定義された各Workerロールに対して、選定モデルの適合性を検証
   - 複数Workerの並行動作時のシステムリソース使用状況を監視
   - 負荷テストによるボトルネック特定と最適化

3. **動的切替機能テスト**
   - 定義された切替条件ごとにローカル/クラウド切替が正しく動作することを確認
   - エッジケース（ネットワーク切断、モデルロード失敗等）での適切なフォールバック動作確認
   - ユーザー設定による優先度変更が正しく反映されることを確認

4. **統合テスト**
   - multiLLM_systemの既存コンポーネントとの連携テスト
   - エンドツーエンドのユーザーフロー検証（UI操作からモデル実行まで）
   - 長時間安定性テスト（メモリリーク、パフォーマンス低下がないか）

5. **ドキュメント検証**
   - 選定モデルと設定の詳細ドキュメントのレビュー
   - 環境構築手順の実機での再現性確認
   - トラブルシューティングガイドの網羅性確認

6. **パフォーマンス比較検証**
   - クラウドAPIとローカルLLMのレイテンシ、コスト、品質の比較データ収集
   - 実際のユースケースでの体感パフォーマンス評価
   - 最適な切替閾値の検証と調整

# Subtasks:
## 1. Phase 1 (M2 Mac)向け 軽量LLM選定と性能評価 [pending]
### Dependencies: None
### Description: 現在のM2 MacBook Air (24GB)環境で現実的に動作する軽量ローカルLLMを選定し、性能を評価する。候補モデル（例: deepseek-coder-v2:16b, llama3:8b, qwen2:7b）について、レスポンス速度、メモリ使用量、タスク品質を評価し、M2 Mac環境での最適モデル構成レポートを作成する。
### Details:


## 2. Phase 2 (Mac Studio)向け 高性能LLM役割定義 [pending]
### Dependencies: 47.1
### Description: Mac Studio (M4 Ultra, 192GB想定)の性能を最大限に活かすため、フルスペックのローカルLLM（例: deepseek-r1:70b, qwen3:70b, llama3.3:70b）を各Workerに割り当てる最終構成を定義する。分析、コード生成、レビューといった役割ごとに最適なモデルを選定し、設計書としてまとめる。
### Details:


## 3. 動的LLM切り替え戦略の設計 [pending]
### Dependencies: 47.1
### Description: タスク内容に応じてクラウドAIとローカルLLMを自動で使い分けるインテリジェントなルーティング機能を設計する。キーワードベース、コストベース、性能ベースのルーティングルールと、UIからのモード指定を組み合わせたハイブリッド戦略を検討し、Orchestratorの具体的な改修設計案を作成する。
### Details:


